{
  "model_file": [{"DATA": ""}],
  "reviews": [{"DATA": ""}],
  "blockHeader": {
    "BTS": "2024-07-28T21:29:09.903991700Z",
    "model_version": "V2021",
    "model_name": "Apartments",
    "modelID": "AparV2021",
    "HCB": "0ec2d1b7a7623a490a7ad0bbfe55cd73560f2fdc364f60e95d02b8757d3c16fb",
    "HPB": "87da656d29fc7e1036ff0aa16c6ef037ae5f17e6213a268672e6460c99fc3768",
    "BID": 1
  }
}